%h3 Load per cpu, 1min average

.chart_container
  .y_axis.load
  .chart.load
  .legend.load

%h3 Used memory (%)

.chart_container
  .y_axis.mem
  .chart.mem
  .legend.mem

%h3 IO reads (MB/sec)

.chart_container
  .y_axis.ioread
  .chart.ioread
  .legend.ioread

%h3 IO writes (MB/sec)

.chart_container
  .y_axis.iowrite
  .chart.iowrite
  .legend.iowrite

:javascript
  var palette = new Rickshaw.Color.Palette();

  // Load graph
  var graph = new Rickshaw.Graph( {
    element: document.querySelector(".chart.load"),
      width: 1000,
        height: 300,
        interpolation: "linear",
        renderer: "line",
        series: #{@load_data}
  } );
  var axes = new Rickshaw.Graph.Axis.Time( {
    graph: graph,
    orientation: "bottom"
  } );
  var y_axis = new Rickshaw.Graph.Axis.Y( {
    graph: graph,
    orientation: "left",
    tickFormat: Rickshaw.Fixtures.Number.formatKMBT,
    element: document.querySelector(".y_axis.load")
  } );

  var legend = new Rickshaw.Graph.Legend( {
    element: document.querySelector(".legend.load"),
      graph: graph
  } );
  graph.render();


  // Memory percentage graph
  palette = new Rickshaw.Color.Palette();

  graph = new Rickshaw.Graph( {
    element: document.querySelector(".chart.mem"),
      width: 1000,
      height: 300,
      interpolation: "linear",
      renderer: "line",
      series: #{@mem_data}
  } );
  axes = new Rickshaw.Graph.Axis.Time( { graph: graph } );
  y_axis = new Rickshaw.Graph.Axis.Y( {
    graph: graph,
    orientation: "left",
    tickFormat: Rickshaw.Fixtures.Number.formatKMBT,
    element: document.querySelector(".y_axis.mem"),
  } );

  legend = new Rickshaw.Graph.Legend( {
    element: document.querySelector(".legend.mem"),
    graph: graph
  } );
  graph.render();

  // IO read graph
  palette = new Rickshaw.Color.Palette();

  graph = new Rickshaw.Graph( {
    element: document.querySelector(".chart.ioread"),
    width: 1000,
    height: 300,
    interpolation: "linear",
    renderer: "line",
    series: #{@ioread_data}
  } );
  axes = new Rickshaw.Graph.Axis.Time( { graph: graph } );
  y_axis = new Rickshaw.Graph.Axis.Y( {
    graph: graph,
    orientation: "left",
    tickFormat: Rickshaw.Fixtures.Number.formatKMBT,
    element: document.querySelector(".y_axis.ioread"),
  } );

  legend = new Rickshaw.Graph.Legend( {
    element: document.querySelector(".legend.ioread"),
    graph: graph
  } );
  graph.render();

  // IO write graph
  palette = new Rickshaw.Color.Palette();
  graph = new Rickshaw.Graph( {
    element: document.querySelector(".chart.iowrite"),
    width: 1000,
    height: 300,
    interpolation: "linear",
    renderer: "line",
    series: #{@iowrite_data}
  } );
  axes = new Rickshaw.Graph.Axis.Time( { graph: graph } );
  y_axis = new Rickshaw.Graph.Axis.Y( {
    graph: graph,
    orientation: "left",
    tickFormat: Rickshaw.Fixtures.Number.formatKMBT,
    element: document.querySelector(".y_axis.iowrite"),
  } );

  legend = new Rickshaw.Graph.Legend( {
    element: document.querySelector(".legend.iowrite"),
    graph: graph
  } );
  graph.render();
